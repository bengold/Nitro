name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: nitro-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: nitro-linux-aarch64
            use_cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: nitro-darwin-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: nitro-darwin-aarch64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross
      if: matrix.use_cross
      run: cargo install cross
    
    - name: Build
      run: |
        if [ "${{ matrix.use_cross }}" = "true" ]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
    
    - name: Package
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../${{ matrix.artifact_name }}.tar.gz nitro
        cd -
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      run: |
        for file in artifacts/*/*.tar.gz; do
          asset_name=$(basename "$file")
          echo "Uploading $asset_name"
          gh release upload "${{ github.ref_name }}" "$file" --clobber
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Calculate SHA256
      run: |
        wget -q "https://github.com/${{ github.repository }}/archive/refs/tags/${{ github.ref_name }}.tar.gz"
        SHA256=$(sha256sum *.tar.gz | cut -d' ' -f1)
        echo "SHA256=$SHA256" >> $GITHUB_ENV
    
    - name: Update Formula
      run: |
        sed -i "s/PLACEHOLDER_SHA256/${{ env.SHA256 }}/g" homebrew/nitro.rb
        sed -i "s|v0.1.0|${{ github.ref_name }}|g" homebrew/nitro.rb
    
    - name: Create PR for Homebrew
      run: |
        echo "Homebrew formula updated with SHA256: ${{ env.SHA256 }}"
        echo "TODO: Submit PR to homebrew/core or create your own tap"